
//
//  =========================================================
//  Mixins
//  =========================================================
//

@mixin box-sizing($border) {
  -webkit-box-sizing: $border;
  	 -moz-box-sizing: $border;
  	  -ms-box-sizing: $border;
  	   -o-box-sizing: $border;
  		  box-sizing: $border;
}

@mixin user-select($select) {
  -webkit-touch-callout: $select;
  	-webkit-user-select: $select;
  	   -moz-user-select: $select;
  		-ms-user-select: $select;
  			user-select: $select;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  	 -moz-transition: $transition;
  	  -ms-transition: $transition;
  	   -o-transition: $transition;
  		  transition: $transition;
}

@mixin force_hardware_acceleration() {
	transform: translateZ(0);
	perspective: 1000;
	backface-visibility: hidden;
	transform: translate3d(0, 0, 0);
}

@mixin background_cover() {
	background-position: center center;
	background-size: cover;
	background-repeat: no-repeat;
	@include force_hardware_acceleration();
	transform: scale(1, 1);
}

@mixin fluid-font-size($size, $options: ()) {
	$important: false;
	@if map-has-key($options, 'important') {
		$important: map-get($options, 'important')
	}

	$magic-size: magic-size($size);
	font-size: $size if($important, !important, null);
	font-size: $magic-size if($important, !important, null);
	content: 'viewport-units-buggyfill; font-size: #{$magic-size}';

	@if map-has-key($options, 'min') {
		$min-size: map-get($options, 'min');
		$min-vw: magic-size-viewport($size, $min-size);
		@media (max-width: $min-vw) {
			font-size: #{$min-size} if($important, !important, null);
		}
	}

	@if map-has-key($options, 'max') {
		$max-size: map-get($options, 'max');
		$max-vw: magic-size-viewport($size, $max-size);
		@media (min-width: $max-vw) {
			font-size: #{$max-size} if($important, !important, null);
		}
	}
}
